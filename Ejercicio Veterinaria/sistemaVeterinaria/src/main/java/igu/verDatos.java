/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package igu;

import Persistencia.exceptions.NonexistentEntityException;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Controladora;
import logica.Mascota;

/**
 *
 * @author pc
 */
 public class verDatos extends javax.swing.JFrame {

     Controladora control  = new Controladora();
    /**
     * Creates new form verDatos
     */
    public verDatos() {
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMascotas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        EliminarBoton = new java.awt.Button();
        EditarBoton = new java.awt.Button();
        botonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tablaMascotas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaMascotas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Curso Egg Desarrollo Web Full Stack\\Ejercicio Veterinaria\\recursos\\1000_F_92404903_MgVK5oSxSkIJyRMdtS2I07BapeEK2kzE.jpg")); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Hoja Clinica Mascota");

        EliminarBoton.setActionCommand("Eliminar");
        EliminarBoton.setLabel("Eliminar");
        EliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarBotonActionPerformed(evt);
            }
        });

        EditarBoton.setLabel("Editar");
        EditarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarBotonActionPerformed(evt);
            }
        });

        botonAtras.setText("Atras");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 12, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EliminarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EditarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonAtras)
                        .addGap(49, 49, 49))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EliminarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EditarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(botonAtras))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarBotonActionPerformed
         
        if(tablaMascotas.getRowCount() > 0  )//Control de tabla vacia
        {
           if(tablaMascotas.getSelectedRow() != -1)//control de fila seleccionada , -1 nada seleccionado
            {
                //se obtiene el id para eliminar fila
                //se extrae el id de la columna 0 , de la fila seleccionada
                int num_cliente = Integer.parseInt(String.valueOf(tablaMascotas.getValueAt(tablaMascotas.getSelectedRow(),0)));
                
               try {
                   //se envia el id para que la logica se encargue de eliminar la fila de la base de datos
                   control.borrarMascota(num_cliente);
               } catch (NonexistentEntityException ex) {
                   Logger.getLogger(verDatos.class.getName()).log(Level.SEVERE, null, ex);
               }
                
                //Se notifica por pantalla la eliminaci贸n
                 MostrarMensaje("Se elimino el paciente","info","Eliminaci贸n exitosa");
                 //actualiza la tabla 
                  cargarTabla();
            }else
               MostrarMensaje("No hay paciente seleccionado","error","Error selecci贸n");
        }else
        MostrarMensaje("Tabla vacia","error","Error eliminaci贸n");
    }//GEN-LAST:event_EliminarBotonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void EditarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarBotonActionPerformed
       if(tablaMascotas.getRowCount() > 0  )//Control de tabla vacia
        {
           if(tablaMascotas.getSelectedRow() != -1)//control de fila seleccionada , -1 nada seleccionado
            {
                //se obtiene el id para editar fila
                //se extrae el id de la columna 0 , de la fila seleccionada
                int num_cliente = Integer.parseInt(String.valueOf(tablaMascotas.getValueAt(tablaMascotas.getSelectedRow(),0)));
                
               EditarPaciente pantallaEditar = new EditarPaciente(num_cliente);
               pantallaEditar.setVisible(true);
               pantallaEditar.setLocationRelativeTo(null);
              
               
                 //actualiza la tabla 
                  cargarTabla();
            }else
               MostrarMensaje("No hay paciente seleccionado","error","Error selecci贸n");
        }else
        MostrarMensaje("Tabla vacia","error","Error edicion");
       
       this.dispose();
    }//GEN-LAST:event_EditarBotonActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
      this.dispose();
    }//GEN-LAST:event_botonAtrasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button EditarBoton;
    private java.awt.Button EliminarBoton;
    private javax.swing.JButton botonAtras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMascotas;
    // End of variables declaration//GEN-END:variables

    public void cargarTabla() 
    {
       //definir el modelo de tabla 
        DefaultTableModel tablaModel = new DefaultTableModel()
        {
            //hace que las filas y columnas no sean editables directamente
            @Override
            public boolean isCellEditable (int row , int column)
            {
                return false;
            }
        };
        
        //nombres de col y fila
        String titulos[] = {"N","Nombre","Raza","Color","Alergico","Atencion Esp","Due帽o","Telefono" };
        tablaModel.setColumnIdentifiers(titulos);
            
        //Carga de datos
        List <Mascota> listaMascotas = control.traerMascotas();
        
        //recorrar la lista y mostrar los elementos en la tabla 
        if(listaMascotas != null)
        {
            for(Mascota masco : listaMascotas)
            {
                Object[] objeto = {
                    masco.getNum_cliente(),//N
                    masco.getNombre(),//Nombre  
                    masco.getRaza(),//Raza
                    masco.getColor(),//Color
                    masco.getAlergico(),//Alergico
                    masco.getTratEspecial(),//Atencion Esp
                    masco.getUnDuenio().getNombre(),//Due帽o nombre
                    masco.getUnDuenio().getNumeroCel()//teldue帽o
                };
                
                tablaModel.addRow(objeto);
                
                
            }
            
           
        }
        
     
         tablaMascotas.setModel(tablaModel); 
        
    }
    
    //Optimizaci贸n de codigo mensajes
    public void MostrarMensaje(String mensaje,String tipo,String titulo)
    {
         JOptionPane optionPane = new JOptionPane(mensaje);
                if(tipo.equals("info"))
                {
                 optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
                }else if(tipo.equals("error"))
                {
                    optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
                }
                 JDialog dialog = optionPane.createDialog(titulo);
                 dialog.setAlwaysOnTop(true);
                 dialog.setVisible(true);
    }
}
